// <auto-generated />
using System;
using Gymnasium.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gymnasium.Migrations
{
    [DbContext(typeof(GymDbContext))]
    [Migration("20250106172756_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gymnasium.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassId")
                        .HasName("PK__Class__CB1927A0BF9205F6");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("Gymnasium.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeValue")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.HasKey("GradeId")
                        .HasName("PK__Grade__54F87A371D29C5B7");

                    b.HasIndex("GradeValue");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grade", (string)null);
                });

            modelBuilder.Entity("Gymnasium.Models.GradeScale", b =>
                {
                    b.Property<string>("GradeValue")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<int>("GradeRank")
                        .HasColumnType("int");

                    b.HasKey("GradeValue")
                        .HasName("PK__GradeSca__5E16159511AA8ED5");

                    b.ToTable("GradeScale", (string)null);
                });

            modelBuilder.Entity("Gymnasium.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("LastName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("StaffId")
                        .HasName("PK__Personal__2834371383E095A6");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Gymnasium.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("LastName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52A79F7C8E7F9");

                    b.HasIndex("ClassId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Gymnasium.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subject__C92D7187D5FADC2F");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("Gymnasium.Models.Grade", b =>
                {
                    b.HasOne("Gymnasium.Models.GradeScale", "GradeValueNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("GradeValue")
                        .HasConstraintName("FK__Grade__GradeValu__4316F928");

                    b.HasOne("Gymnasium.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Grade__StudentID__412EB0B6");

                    b.HasOne("Gymnasium.Models.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Grade__SubjectID__403A8C7D");

                    b.Navigation("GradeValueNavigation");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Gymnasium.Models.Student", b =>
                {
                    b.HasOne("Gymnasium.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_Students_ClassID");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Gymnasium.Models.Subject", b =>
                {
                    b.HasOne("Gymnasium.Models.Staff", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Subject__TeacherI__3B75D760");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Gymnasium.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Gymnasium.Models.GradeScale", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("Gymnasium.Models.Staff", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Gymnasium.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("Gymnasium.Models.Subject", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
